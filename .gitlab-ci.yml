stages:
  - build
  - deploy
  - release

variables:
  CONTAINER_TEST_IMAGE: $DOCKER_REGISTRY/$DOCKER_REGISTRY_USER/web:$CI_COMMIT_REF_SLUG
  CONTAINER_PROD_IMAGE: $DOCKER_REGISTRY/$DOCKER_REGISTRY_USER/web:prod
  HELM_RELEASE: poc

.docker-default: &docker-default
  image: docker:latest
  services:
    - docker:dind
  before_script:
    - docker login -u $DOCKER_REGISTRY_USER -p $DOCKER_REGISTRY_PASSWORD $DOCKER_REGISTRY

docker-build:
  stage: build
  <<: *docker-default
  script:
    - docker build --pull --build-arg VERSION=$CI_COMMIT_REF_SLUG -t $CONTAINER_TEST_IMAGE ./app
    - docker push $CONTAINER_TEST_IMAGE
  except:
    - master

blue-green-deploy:
  stage: deploy
  image:
    name: alpine/helm:latest
    entrypoint: [""]
  script:
    #- helm upgrade -i $HELM_RELEASE ./helm --set ingress.hosts[0].paths={'blue'\,'green'},imageBlue.tag=$CI_COMMIT_REF_SLUG
    - helm template $HELM_RELEASE ./helm --set ingress.hosts[0].paths={'blue'\,'green'},imageBlue.tag=$CI_COMMIT_REF_SLUG
  only:
    - merge_requests
  except:
    - /^v(\d+)\.(\d+)(\.\d+)?$/

update-prod-image:
  stage: deploy
  <<: *docker-default
  script:
    - docker pull $CONTAINER_TEST_IMAGE
    - docker tag $CONTAINER_TEST_IMAGE $CONTAINER_PROD_IMAGE
    - docker push $CONTAINER_PROD_IMAGE
  only:
    - /^v(\d+)\.(\d+)(\.\d+)?$/

prod-release:
  stage: release
  image:
    name: alpine/helm:latest
    entrypoint: [""]
  script:
    #- helm upgrade -i $HELM_RELEASE ./helm
    - helm template $HELM_RELEASE ./helm
  only:
    - /^v(\d+)\.(\d+)(\.\d+)?$/
    - master
